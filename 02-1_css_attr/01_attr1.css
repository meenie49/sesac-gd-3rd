.px {
  width: 100px;
  height: 100px;
  background-color: pink;
}

/* em : 부모 요소의 font-size가 기준 ->사용 시 주의 필요 */
.em-text {
  /* 부모 요소의 font-size를 사용하기 때문에 중첩되면 잘 변경됨 */
  font-size: 2em;
}

/* rem : root(html)의 font-size가 기준 -> 중첩되어도 영향x */
/* html의 font-size를 지정하지 않으면 기본적으로 1rem = 16px */
.rem-text {
  font-size: 2rem;
}

/* em  */
.em {
  width: 10em;
  height: 10em;
  background-color: aliceblue;
}

.em-parents {
  font-size: 10px;
  background-color: violet;
}

.rem {
  width: 10rem;
  height: 10rem;
  background-color: rgb(144, 186, 241);
}

.rem-parents {
  font-size: 30px;
  background-color: rgb(236, 236, 62);
}

.percent {
  width: 50%;
  background-color: rgb(79, 148, 148);
}

/* div의 부모는 body이므로 body의 70% */
.percent-parents {
  width: 70%;
  /* width: 300px */
  background-color: brown;
}

.vh {
  width: 30vh;
  height: 30vh;
  background-color: chocolate;
}

.vw {
  width: 30vw;
  height: 130vw;
  background-color: rgb(233, 197, 233);
}

.d-block {
  /* display block; -> div의 요소의 default 속성값 */
  background-color: antiquewhite;
  border: 1px solid yellow;
  width: 100px;
  height: 100px;
  /* 겹칠 때 더 큰 마진이 적용 */
  /* margin : 테두리 바깥 여백 */
  /* 요소 간의 거리를 둘 수 있음 */
  /* 만약 마진이 겹치는 경우 더 큰 크기의 margin만큼 여백이 생김 */
  margin: 10px 20px 30px 40px;
  margin: 10px 20px;
  /* padding의 단축속성 */
  padding: 30px;
  /* margin과 padding */
  padding-top: 50px;
}

.d-inline {
  /* display 속성으로 인-> 블, 블->인 으로 바꿀 수 있음 */
  /* display : inline; -> span 요소의 defalut 속성값 */
  /* display: block; */
  background-color: lightgray;
  border: 1px solid darkslateblue;
  /* inline 요소는 content에 맞춰지기 때문에 임의로 설정해도 적용 안됨 */
  /* inline속성의 padding은 좌우만 적용됨, margin padding 속성 적용 잘 안함 */
  /* width: 100px;
  height: 100px; */
  /* inline의 margin은 좌우만 가능 */
  /* margin과 padding은 실제 레이아웃에 영향을 미치지 않아 레이아웃이 깨질 수 있음 */
}

/* 인라인요소처럼 수평정렬 가능하고, 블록요소처럼 height와 width를 지정할 수 있음 */
/* 인라인 요소 */
.d-inline-block {
  width: 200px;
  height: 200px;

  /* block 요소처럼 width와 height를 지정할 수 있음 */
  /* inline 요소처럼 content 크기에 딱 맞도록 기본 크기 자동 지정 */
  /* inline 요소처럼 수평 정렬 */
  display: inline-block;
  background-color: 1px solid salmon;
  height: 30px;
}

.b {
  background-color: orange;
  width: auto;
  height: 200px;
}

.b * {
  display: inline-block;
  width: 200px;
  height: 100px;
  /* 간격 30px로 바꿈 */
  margin-right: 30px;
}

.ib1 {
  background-color: skyblue;
  /* display: inline-block;
  margin-right: 30px;
  width: 200px;
  height: 100px; */
}

.ib2 {
  background-color: green;
  /* display: inline-block;
  width: 200px;
  height: 100px; */
}

.ib3 {
  background-color: red;
  /* display: inline-block;
  width: 200px;
  height: 100px; */
}

/* max-width, min-width */
/* min,max는 부모랑 같이 써줘야되는지 */
.parent {
  width: 500px;
  height: 200px;
  background-color: pink;
}

.min {
  /* 최소 넓이이므로 400px 보다 늘어날 수 있지만 줄어들 수 없음 */
  min-width: 400px;
  height: 100px;
  background-color: palevioletred;
}

.max {
  /* 최대 넓이 이므로 400px 보다 줄어들 수 있지만 늘어날 수 없음 */
  max-width: 400px;
  height: 100px;
  background-color: yellowgreen;
}

.header {
  height: 130px;
  background-color: aqua;
}
.calc {
  /* 뷰포트 높이가 100vh에서 헤더 높이 빼면 뷰포트화면에 딱맞게 크기가 나옴 */
  width: calc(100vw - 300px);
  height: calc(100vh - 130px);
  background-color: gold;
}

/* height 도 마찬가지 */
/* 하지만 max-width와 min-width, max-height와 min-height는
주로 반응형을 위한 웹 페이지에서 사용되기 때문에 width 기반으로 많이 쓰임 */

/* border & border-radius */
.border {
  /* border -> 단축속성 */
  border: 3px solid black;
  /* 굵기(border-width) 스타일(border-style) 색상(border-color) */
  /* 위에 한줄과 아래 3줄을 같은 뜻 */
  border-width: 1px;
  border-style: dotted;
  border-color: red orange yellow green;
  border-right: 5px solid purple;
}

.rounded {
  /* border: none; */
  width: 150px;
  border: 3px solid black;
  height: 80px;
  /* radius 순서 : 좌상-우상-우하-좌하 */
  border-radius: 40px;
  border-radius: 5px 10px;
  border-radius: 20px 0 5px;
  border-radius: 5px 10px 15px 20px;
}

/* box-sizing */
/* 요소의 크기 계싼 기준을 지정하는 속성 */
.box-sizing {
  width: 100px;
  height: 100px;
  padding: 20px;
  border: 15px solid red;
  background-color: orange;
}

.content-box {
  box-sizing: content-box;
}

.border-box {
  box-sizing: border-box;
}
